name: Build and Deploy Code
on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main
jobs:
  build:
    environment:
      name: testing
    
    env:
      DATABASE_ENGINE: ${{secrets.DATABASE_ENGINE}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      ALLOWED_HOSTS: ${{secrets.ALLOWED_HOSTS}}
      ACCESS_TOKEN_LIFETIME: ${{secrets.ACCESS_TOKEN_LIFETIME}}
      REFRESH_TOKEN_LIFETIME: ${{secrets.REFRESH_TOKEN_LIFETIME}}
      ROTATE_REFRESH_TOKENS: ${{secrets.ROTATE_REFRESH_TOKENS}}
      BLACKLIST_AFTER_ROTATION: ${{secrets.BLACKLIST_AFTER_ROTATION}}
      UPDATE_LAST_LOGIN: ${{secrets.UPDATE_LAST_LOGIN}}
      EMAIL_BACKEND: ${{secrets.EMAIL_BACKEND}}
      EMAIL_HOST: ${{secrets.EMAIL_HOST}}
      EMAIL_PORT: ${{secrets.EMAIL_PORT}}
      EMAIL_USE_TLS: ${{secrets.EMAIL_USE_TLS}}
      EMAIL_HOST_USER: ${{secrets.EMAIL_HOST_USER}}
      EMAIL_HOST_PASSWORD: ${{secrets.EMAIL_HOST_PASSWORD}}
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: Install python version 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      # - name: test with pytest
      #   run: |
      #     pip install pytest
      #     pip install pytest-django
      #     pytest
